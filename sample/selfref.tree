((- :?- :?-) ~> :?-)
((appendn :xs :x :n) ~TODO> (appendn (:xs :x) :x (- :n 1)))
((appendn :xs :x +0) ~TODO> :xs)
((repdef :name :r :def) ~> ((:name :r) ~> :def)
                           ((:name :r :r) ~> :def)
                           ((:name :r :r :r) ~> :def)
                           ((:name :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r :r :r :r :r) ~> :def)
                           ((:name :r :r :r :r :r :r :r :r :r :r :r :r) ~> :def))
                          
((nil :a) ~> )

(repdef p :?> (nil (:?>)))
((def :name :def) ~> ((p :name) (:name ~> :def)))

(p hello world)
(def newfunc woohoo)


(appendn (hello) ok +10)