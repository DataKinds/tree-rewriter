((p ?>) ~> ?>)
((t :desc :!got :wanted) ~> (p (❌ :desc got :got wanted :wanted)))
((t :desc :!val :val) ~> (p (✅ :desc :val)))
((Test a :desc Given :test We expect :val) ~> (t :desc :test :val))

(Test a "Placing and picking things out from the pocket"
    Given (
        (|(apple pear orange peach))
        ((apple pear) |)
        ((pear orange)|)
        ((peach)|)
        (@ bag)
    )
    We expect (
        ((pear orange))
    ))

(Test a "Plain terms can be parsed and consumed"
    Given (
        ((pomme pomegranate) |> weird-fruit-salad)
        (|pomme)
        (|pomegranate)
        (|(pomme pomegranate))
        (weird-fruit-salad|)
        (weird-fruit-salad |)
    )
    We expect ())

(1|3 & hello~world)






(hello |)
(| hello)
((grape orange apple) |)
((orange apple) | fruit-salad)
(@ bag) ----> (fruit-salad grape)