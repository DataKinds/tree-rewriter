(@ parse (@ cat "t.rosin"))

(Test a "Cons lists parse"
    Given ([this is a cons list]) 
    We expect ((this (is (a (cons (list ())))))))

(Test a "Cons list tail variable definition"
    Given ([cons tail ::tail] ~> :tail)
    We expect (defined "(cons (tail :tail)) ~> :tail"))

(Test a "Cons list tail variable application"
    Given 
       ([cons head]
        [cons tail]
        [cons tail rest of the list])
    We expect 
       ((cons (head ()))
        ()
        (rest (of (the (list ()))))))
